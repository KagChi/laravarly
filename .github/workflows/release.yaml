name: Release Contents

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  release:
    types: [created]

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Setup PHP Version
        uses: shivammathur/setup-php@cf4cade2721270509d5b1c766ab3549210a39a2a # v2
        with:
          php-version: '8.3'
          tools: composer:v2

      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-progress --no-suggest

      - name: Setup pnpm
        uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4

      - name: Setup Node.js
        uses: useblacksmith/setup-node@65c6ca86fdeb0ab3d85e78f57e4f6a7e4780b391 # v5
        with:
          node-version-file: .node-version

      - name: Install Node dependencies
        run: pnpm install --frozen-lockfile
      
      - name: Linting
        run: pnpm lint

      - name: Compile Vite Requirements
        run: pnpm build

      - name: Create ZIP archive
        if: github.event_name == 'push' || github.event_name == 'release'
        run: zip -r release.zip LICENSE README.md vendor public app bootstrap config database resources routes storage tests artisan composer.json composer.lock package.json .env.example

      - name: Create Staging Release
        if: github.event_name == 'push' && github.event_name != 'release'
        uses: ncipollo/release-action@440c8c1cb0ed28b9f43e4d1d670870f059653174 # v1
        with:
          artifacts: "release.zip"
          allowUpdates: true
          tag: "staging"
          replacesArtifacts: true
          name: "Staging Build"
          prerelease: true
      
      - name: Create Production Release
        if: github.event_name == 'release'
        uses: actions/upload-release-asset@e8f9f06c4b078e705bd2ea027f0926603fc9b4d5 # v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./release.zip
          asset_name: release.zip
          asset_content_type: application/zip
